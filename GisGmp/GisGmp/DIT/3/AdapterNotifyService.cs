//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GisGmp.DIT._3
{

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace = "http://www.fors.ru/smev3/adapter-notify-service/wsdl", ConfigurationName = "AdapterNotifyService")]
    public interface AdapterNotifyService
    {

        // CODEGEN: Контракт генерации сообщений с операцией OnResponseReceived не является ни RPC, ни упакованным документом.
        [System.ServiceModel.OperationContractAttribute(Action = "http://www.fors.ru/smev3/adapter-notify-service/wsdl/AdapterNotifyService/OnRespo" +
            "nseReceivedRequest", ReplyAction = "http://www.fors.ru/smev3/adapter-notify-service/wsdl/AdapterNotifyService/OnRespo" +
            "nseReceivedResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OnResponseReceivedResponse1 OnResponseReceived(OnResponseReceivedRequest1 request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://www.fors.ru/smev3/adapter-notify-service/wsdl/AdapterNotifyService/OnRespo" +
            "nseReceivedRequest", ReplyAction = "http://www.fors.ru/smev3/adapter-notify-service/wsdl/AdapterNotifyService/OnRespo" +
            "nseReceivedResponse")]
        System.Threading.Tasks.Task<OnResponseReceivedResponse1> OnResponseReceivedAsync(OnResponseReceivedRequest1 request);

        // CODEGEN: Контракт генерации сообщений с операцией OnSupplierRequestReceived не является ни RPC, ни упакованным документом.
        [System.ServiceModel.OperationContractAttribute(Action = "http://www.fors.ru/smev3/adapter-notify-service/wsdl/AdapterNotifyService/OnSuppl" +
            "ierRequestReceivedRequest", ReplyAction = "http://www.fors.ru/smev3/adapter-notify-service/wsdl/AdapterNotifyService/OnSuppl" +
            "ierRequestReceivedResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        OnSupplierRequestReceivedResponse1 OnSupplierRequestReceived(OnSupplierRequestReceivedRequest1 request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://www.fors.ru/smev3/adapter-notify-service/wsdl/AdapterNotifyService/OnSuppl" +
            "ierRequestReceivedRequest", ReplyAction = "http://www.fors.ru/smev3/adapter-notify-service/wsdl/AdapterNotifyService/OnSuppl" +
            "ierRequestReceivedResponse")]
        System.Threading.Tasks.Task<OnSupplierRequestReceivedResponse1> OnSupplierRequestReceivedAsync(OnSupplierRequestReceivedRequest1 request);
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.fors.ru/smev3/adapter-notify-service")]
    public partial class OnResponseReceivedRequest
    {

        private string requestMessageIdField;

        private string requestStatusField;

        private string requestErrorField;

        private System.DateTime requestSendDateField;

        private bool requestSendDateFieldSpecified;

        private OnResponseReceivedRequestResponse responseField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string RequestMessageId
        {
            get
            {
                return this.requestMessageIdField;
            }
            set
            {
                this.requestMessageIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string RequestStatus
        {
            get
            {
                return this.requestStatusField;
            }
            set
            {
                this.requestStatusField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string RequestError
        {
            get
            {
                return this.requestErrorField;
            }
            set
            {
                this.requestErrorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public System.DateTime RequestSendDate
        {
            get
            {
                return this.requestSendDateField;
            }
            set
            {
                this.requestSendDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RequestSendDateSpecified
        {
            get
            {
                return this.requestSendDateFieldSpecified;
            }
            set
            {
                this.requestSendDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public OnResponseReceivedRequestResponse Response
        {
            get
            {
                return this.responseField;
            }
            set
            {
                this.responseField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.fors.ru/smev3/adapter-notify-service")]
    public partial class OnResponseReceivedRequestResponse
    {

        private string responseMessageIdField;

        private string responseTypeField;

        private System.DateTime responseDateField;

        private System.Xml.XmlElement responseContentField;

        private AttachmentInfo[] attachmentField;

        private string asyncProcessingStatusCategoryField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string ResponseMessageId
        {
            get
            {
                return this.responseMessageIdField;
            }
            set
            {
                this.responseMessageIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string ResponseType
        {
            get
            {
                return this.responseTypeField;
            }
            set
            {
                this.responseTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public System.DateTime ResponseDate
        {
            get
            {
                return this.responseDateField;
            }
            set
            {
                this.responseDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        public System.Xml.XmlElement ResponseContent
        {
            get
            {
                return this.responseContentField;
            }
            set
            {
                this.responseContentField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Attachment", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        public AttachmentInfo[] Attachment
        {
            get
            {
                return this.attachmentField;
            }
            set
            {
                this.attachmentField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        public string AsyncProcessingStatusCategory
        {
            get
            {
                return this.asyncProcessingStatusCategoryField;
            }
            set
            {
                this.asyncProcessingStatusCategoryField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.fors.ru/smev3/adapter-notify-service")]
    public partial class AttachmentInfo
    {

        private string idField;

        private string fileNameField;

        private string mimeTypeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public string FileName
        {
            get
            {
                return this.fileNameField;
            }
            set
            {
                this.fileNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public string MimeType
        {
            get
            {
                return this.mimeTypeField;
            }
            set
            {
                this.mimeTypeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.fors.ru/smev3/adapter-notify-service")]
    public partial class OnResponseReceivedResponse
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class OnResponseReceivedRequest1
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://www.fors.ru/smev3/adapter-notify-service", Order = 0)]
        public OnResponseReceivedRequest OnResponseReceivedRequest;

        public OnResponseReceivedRequest1()
        {
        }

        public OnResponseReceivedRequest1(OnResponseReceivedRequest OnResponseReceivedRequest)
        {
            this.OnResponseReceivedRequest = OnResponseReceivedRequest;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class OnResponseReceivedResponse1
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://www.fors.ru/smev3/adapter-notify-service", Order = 0)]
        public OnResponseReceivedResponse OnResponseReceivedResponse;

        public OnResponseReceivedResponse1()
        {
        }

        public OnResponseReceivedResponse1(OnResponseReceivedResponse OnResponseReceivedResponse)
        {
            this.OnResponseReceivedResponse = OnResponseReceivedResponse;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.fors.ru/smev3/adapter-notify-service")]
    public partial class OnSupplierRequestReceivedRequest
    {

        private string requestMessageIdField;

        private System.Xml.XmlElement requestContentField;

        private AttachmentInfo[] attachmentField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public string RequestMessageId
        {
            get
            {
                return this.requestMessageIdField;
            }
            set
            {
                this.requestMessageIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public System.Xml.XmlElement RequestContent
        {
            get
            {
                return this.requestContentField;
            }
            set
            {
                this.requestContentField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Attachment", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public AttachmentInfo[] Attachment
        {
            get
            {
                return this.attachmentField;
            }
            set
            {
                this.attachmentField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.fors.ru/smev3/adapter-notify-service")]
    public partial class OnSupplierRequestReceivedResponse
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class OnSupplierRequestReceivedRequest1
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://www.fors.ru/smev3/adapter-notify-service", Order = 0)]
        public OnSupplierRequestReceivedRequest OnSupplierRequestReceivedRequest;

        public OnSupplierRequestReceivedRequest1()
        {
        }

        public OnSupplierRequestReceivedRequest1(OnSupplierRequestReceivedRequest OnSupplierRequestReceivedRequest)
        {
            this.OnSupplierRequestReceivedRequest = OnSupplierRequestReceivedRequest;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class OnSupplierRequestReceivedResponse1
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://www.fors.ru/smev3/adapter-notify-service", Order = 0)]
        public OnSupplierRequestReceivedResponse OnSupplierRequestReceivedResponse;

        public OnSupplierRequestReceivedResponse1()
        {
        }

        public OnSupplierRequestReceivedResponse1(OnSupplierRequestReceivedResponse OnSupplierRequestReceivedResponse)
        {
            this.OnSupplierRequestReceivedResponse = OnSupplierRequestReceivedResponse;
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AdapterNotifyServiceChannel : AdapterNotifyService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdapterNotifyServiceClient : System.ServiceModel.ClientBase<AdapterNotifyService>, AdapterNotifyService
    {

        public AdapterNotifyServiceClient()
        {
        }

        public AdapterNotifyServiceClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public AdapterNotifyServiceClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public AdapterNotifyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public AdapterNotifyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnResponseReceivedResponse1 AdapterNotifyService.OnResponseReceived(OnResponseReceivedRequest1 request)
        {
            return base.Channel.OnResponseReceived(request);
        }

        public OnResponseReceivedResponse OnResponseReceived(OnResponseReceivedRequest OnResponseReceivedRequest)
        {
            OnResponseReceivedRequest1 inValue = new OnResponseReceivedRequest1();
            inValue.OnResponseReceivedRequest = OnResponseReceivedRequest;
            OnResponseReceivedResponse1 retVal = ((AdapterNotifyService)(this)).OnResponseReceived(inValue);
            return retVal.OnResponseReceivedResponse;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OnResponseReceivedResponse1> AdapterNotifyService.OnResponseReceivedAsync(OnResponseReceivedRequest1 request)
        {
            return base.Channel.OnResponseReceivedAsync(request);
        }

        public System.Threading.Tasks.Task<OnResponseReceivedResponse1> OnResponseReceivedAsync(OnResponseReceivedRequest OnResponseReceivedRequest)
        {
            OnResponseReceivedRequest1 inValue = new OnResponseReceivedRequest1();
            inValue.OnResponseReceivedRequest = OnResponseReceivedRequest;
            return ((AdapterNotifyService)(this)).OnResponseReceivedAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnSupplierRequestReceivedResponse1 AdapterNotifyService.OnSupplierRequestReceived(OnSupplierRequestReceivedRequest1 request)
        {
            return base.Channel.OnSupplierRequestReceived(request);
        }

        public OnSupplierRequestReceivedResponse OnSupplierRequestReceived(OnSupplierRequestReceivedRequest OnSupplierRequestReceivedRequest)
        {
            OnSupplierRequestReceivedRequest1 inValue = new OnSupplierRequestReceivedRequest1();
            inValue.OnSupplierRequestReceivedRequest = OnSupplierRequestReceivedRequest;
            OnSupplierRequestReceivedResponse1 retVal = ((AdapterNotifyService)(this)).OnSupplierRequestReceived(inValue);
            return retVal.OnSupplierRequestReceivedResponse;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OnSupplierRequestReceivedResponse1> AdapterNotifyService.OnSupplierRequestReceivedAsync(OnSupplierRequestReceivedRequest1 request)
        {
            return base.Channel.OnSupplierRequestReceivedAsync(request);
        }

        public System.Threading.Tasks.Task<OnSupplierRequestReceivedResponse1> OnSupplierRequestReceivedAsync(OnSupplierRequestReceivedRequest OnSupplierRequestReceivedRequest)
        {
            OnSupplierRequestReceivedRequest1 inValue = new OnSupplierRequestReceivedRequest1();
            inValue.OnSupplierRequestReceivedRequest = OnSupplierRequestReceivedRequest;
            return ((AdapterNotifyService)(this)).OnSupplierRequestReceivedAsync(inValue);
        }
    }
}